# File Location: ~/.bash_profile
# Run the following to download and initialize:
# curl -o ~/.bash_profile https://raw.githubusercontent.com/mindovermiles262/dots/master/bash/bash_profile && source ~/.bash_profile

# Load settings from .bashrc
[[ -r ~/.bashrc ]] && . ~/.bashrc

alias linux-upgrade="sudo apt-get update \
  && sudo apt-get -y upgrade \
  && sudo apt-get -y dist-upgrade \
  && printf '\n\n' \
  && printf 'Linux Has Been Updated\n  {apt-get update}\n  {apt-get upgrade}\n  {apt-get dist-upgrade}\n'"

alias open="xdg-open ."

# Add color to Terminal:
# export PS1="\[\e[1;31m\W\]\[\e[32m\$(parse_git_branch)\]\[\e[00m $\] "
# \e[44;30m              => Color definition
# \W                     => Prints CWD
# \e[40;32m              => Color definition
# \$(parse_git_branch)   => Includes git branch
# \e[00m                 => Default Color
# $                      => Prompt Character

# Git branch in terminal.
# parse_git_branch() {
#    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
#}

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

export PS1="\W \`parse_git_branch\` \\$ "

# File Aliases
alias ll="ls -lha"
alias la="ls -lha"
alias l="ls -lh"

# Add Rails Aliases
alias reset="rails db:migrate:reset; rails db:seed"
alias migrate="rails db:migrate"
alias seed="rails db:seed"

# Editor Aliases
alias v="vim"
alias sv="sudo vim"
alias c="code ."

# Editing Bash Profile
alias vbash="vim ~/.bash_profile"
alias sbash="source ~/.bash_profile"

# Download VIM-Plug and initialize in ~/.vim/autoload, then download .vimrc
alias vim-init="printf 'Downloading Plug\n' \
  && curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \
  && curl -o ~/.vimrc https://raw.githubusercontent.com/mindovermiles262/dots/master/vim/vimrc"

# Download and update program profiles
alias vim-update="printf 'Updating .vimrc file:\n' \
  && curl -o ~/.vimrc https://raw.githubusercontent.com/mindovermiles262/dots/master/vim/vimrc"
  
alias bash-update="curl -o ~/.bash_profile https://raw.githubusercontent.com/mindovermiles262/dots/master/bash/bash_profile \
  && source ~/.bash_profile \
  && clear \
  && printf 'Updated .bash_profile from Github\n'"

# Get current IP address
alias cip="curl https://andyduss.com/ip"


# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Add rbenv to PATH
if [ -d "$HOME/.rbenv" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi
